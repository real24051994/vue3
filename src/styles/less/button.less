@import "~ant-design-vue/lib/style/themes/index.less";
@import "~ant-design-vue/lib/style/mixins/index.less";
@import "~ant-design-vue/lib/button/style/mixin.less";

@btn-prefix-cls: ~"@{ant-prefix}-btn";

// for compatible
@btn-ghost-color: @text-color;
@btn-ghost-bg: transparent;
@btn-ghost-border: @border-color-base;

// mixins for button
// ------------------------
.button-size(@height; @padding; @font-size; @border-radius) {
	height: @height;
	padding: @padding;
	font-size: @font-size;
	border-radius: @border-radius;
}

.button-disabled(@color: @btn-disable-color; @background: @btn-disable-bg; @border: @btn-disable-border) {
	&-disabled,
	&.disabled,
	&[disabled] {
		&,
		&:hover,
		&:focus,
		&:active,
		&.active {
			.button-color(@color; @background; @border);

			text-shadow: none;
			box-shadow: none;
		}
	}
}

.button-variant-primary(@color; @background) {
	.button-color(@color; @background; @background);

	text-shadow: @btn-text-shadow;
	box-shadow: @btn-primary-shadow;

	&:hover,
	&:focus {
		.button-color(@color; ~`colorPalette("@{background}", 5) `; ~`colorPalette("@{background}", 5) `);
	}

	&:active,
	&.active {
		.button-color(@color; ~`colorPalette("@{background}", 7) `; ~`colorPalette("@{background}", 7) `);
	}

	.button-disabled();
}

.button-variant-other(@color; @background; @border) {
	.button-color(@color; @background; @border);

	&:hover,
	&:focus {
		.button-color(~`colorPalette("@{btn-primary-bg}", 5) `; @background; ~`colorPalette("@{btn-primary-bg}", 5) `);
	}
	&:active,
	&.active {
		.button-color(~`colorPalette("@{btn-primary-bg}", 7) `; @background; ~`colorPalette("@{btn-primary-bg}", 7) `);
	}
	.button-disabled();
}
.button-variant-ghost(@color; @border: @color) {
	.button-color(@color; transparent; @border);
	text-shadow: none;
	&:hover,
	&:focus {
		& when (@border = transparent) {
			.button-color(~`colorPalette("@{color}", 5) `; transparent; transparent);
		}
		& when not(@border = transparent) {
			.button-color(~`colorPalette("@{color}", 5) `; transparent; ~`colorPalette("@{color}", 5) `);
		}
	}
	&:active,
	&.active {
		& when (@border = transparent) {
			.button-color(~`colorPalette("@{color}", 7) `; transparent; transparent);
		}
		& when not(@border = transparent) {
			.button-color(~`colorPalette("@{color}", 7) `; transparent; ~`colorPalette("@{color}", 7) `);
		}
	}
	.button-disabled();
}
.button-color(@color; @background; @border) {
	color: @color;
	background-color: @background;
	border-color: @border;
	// a inside Button which only work in Chrome
	// http://stackoverflow.com/a/17253457
	> a:only-child {
		color: currentColor;
		&::after {
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			background: transparent;
			content: "";
		}
	}
}
.button-group-base(@btnClassName) {
	position: relative;
	display: inline-block;
	> .@{btnClassName},
	> span > .@{btnClassName} {
		position: relative;
		&:hover,
		&:focus,
		&:active,
		&.active {
			z-index: 2;
		}
		&:disabled {
			z-index: 0;
		}
	}
	> .@{btnClassName}-icon-only {
		font-size: @font-size-base;
	}
	// size
	&-lg > .@{btnClassName},
	&-lg > span > .@{btnClassName} {
		.button-size(@btn-height-lg; @btn-padding-lg; @btn-font-size-lg; 0);
		line-height: @btn-height-lg - 2px;
	}
	&-lg > .@{btnClassName}.@{btnClassName}-icon-only {
		.square(@btn-height-lg);
		padding-right: 0;
		padding-left: 0;
	}
	&-sm > .@{btnClassName},
	&-sm > span > .@{btnClassName} {
		.button-size(@btn-height-sm; @btn-padding-sm; @font-size-base; 0);
		line-height: @btn-height-sm - 2px;
		> .@{iconfont-css-prefix} {
			font-size: @font-size-base;
		}
	}
	&-sm > .@{btnClassName}.@{btnClassName}-icon-only {
		.square(@btn-height-sm);
		padding-right: 0;
		padding-left: 0;
	}
} // Base styles of buttons
// --------------------------------------------------
.btn() {
	position: relative;
	display: inline-block;
	font-weight: @btn-font-weight;
	white-space: nowrap;
	text-align: center;
	background-image: none;
	border: @btn-border-width @btn-border-style transparent;
	box-shadow: @btn-shadow;
	cursor: pointer;
	transition: all 0.3s @ease-in-out;
	user-select: none;
	touch-action: manipulation;
	.button-size(@btn-height-base; @btn-padding-base; @font-size-base; @btn-border-radius-base);
	> .@{iconfont-css-prefix} {
		line-height: 1;
	}
	&,
	&:active,
	&:focus {
		outline: 0;
	}
	&:not([disabled]):hover {
		text-decoration: none;
	}
	&:not([disabled]):active {
		outline: 0;
		box-shadow: none;
	}
	&.disabled,
	&[disabled] {
		cursor: not-allowed;
		> * {
			pointer-events: none;
		}
	}
	&-lg {
		.button-size(@btn-height-lg; @btn-padding-lg; @btn-font-size-lg; @btn-border-radius-base);
	}
	&-sm {
		.button-size(@btn-height-sm; @btn-padding-sm; @btn-font-size-sm; @btn-border-radius-sm);
	}
} // primary button style
.btn-primary() {
	.button-color(@btn-primary-color; @btn-primary-bg; @btn-primary-border);
	&:hover{
		.button-color(@btn-primary-hover-color; @btn-primary-hover-bg; @btn-primary-hover-border);
	}
	&:focus {
		.button-color(@btn-primary-focus-color; @btn-primary-focus-bg; @btn-primary-focus-border);
	}
	&:active,
	&.active {
		.button-color(@btn-primary-active-color; @btn-primary-active-bg; @btn-primary-active-border);
	}
	.button-disabled(@btn-primary-disabled-color; @btn-primary-disabled-bg; @btn-primary-disabled-border);
	&.ant-btn-loading{
		.button-color(@btn-primary-pending-color; @btn-primary-pending-bg; @btn-primary-pending-border);
	}
} 
.btn-outline-primary() {
	.button-color(@btn-outline-primary-color; @btn-outline-primary-bg; @btn-outline-primary-border);
	&:hover{
		.button-color(@btn-outline-primary-hover-color; @btn-outline-primary-hover-bg; @btn-outline-primary-hover-border);
	}
	&:focus {
		.button-color(@btn-outline-primary-focus-color; @btn-outline-primary-focus-bg; @btn-outline-primary-focus-border);
	}
	&:active,
	&.active {
		.button-color(@btn-outline-primary-active-color; @btn-outline-primary-active-bg; @btn-outline-primary-active-border);
	}
	.button-disabled(@btn-outline-primary-disabled-color; @btn-outline-primary-disabled-bg; @btn-outline-primary-disabled-border);
	&.ant-btn-loading{
		.button-color(@btn-outline-primary-pending-color; @btn-outline-primary-pending-bg; @btn-outline-primary-pending-border);
	}
} 
.btn-success() {
	.button-color(@btn-success-color; @btn-success-bg; @btn-success-border);
	&:hover{
		.button-color(@btn-success-hover-color; @btn-success-hover-bg; @btn-success-hover-border);
	}
	&:focus {
		.button-color(@btn-success-focus-color; @btn-success-focus-bg; @btn-success-focus-border);
	}
	&:active,
	&.active {
		.button-color(@btn-success-active-color; @btn-success-active-bg; @btn-success-active-border);
	}
	.button-disabled(@btn-success-disabled-color; @btn-success-disabled-bg; @btn-success-disabled-border);
	&.ant-btn-loading{
		.button-color(@btn-success-pending-color; @btn-success-pending-bg; @btn-success-pending-border);
	}
} 
.btn-outline-success() {
	.button-color(@btn-outline-success-color; @btn-outline-success-bg; @btn-outline-success-border);
	&:hover{
		.button-color(@btn-outline-success-hover-color; @btn-outline-success-hover-bg; @btn-outline-success-hover-border);
	}
	&:focus {
		.button-color(@btn-outline-success-focus-color; @btn-outline-success-focus-bg; @btn-outline-success-focus-border);
	}
	&:active,
	&.active {
		.button-color(@btn-outline-success-active-color; @btn-outline-success-active-bg; @btn-outline-success-active-border);
	}
	.button-disabled(@btn-outline-success-disabled-color; @btn-outline-success-disabled-bg; @btn-outline-success-disabled-border);
	&.ant-btn-loading{
		.button-color(@btn-outline-success-pending-color; @btn-outline-success-pending-bg; @btn-outline-success-pending-border);
	}
} 
.btn-danger() {
	.button-color(@btn-danger-color; @btn-danger-bg; @btn-danger-border);
	&:hover{
		.button-color(@btn-danger-hover-color; @btn-danger-hover-bg; @btn-danger-hover-border);
	}
	&:focus {
		.button-color(@btn-danger-focus-color; @btn-danger-focus-bg; @btn-danger-focus-border);
	}
	&:active,
	&.active {
		.button-color(@btn-danger-active-color; @btn-danger-active-bg; @btn-danger-active-border);
	}
	.button-disabled(@btn-danger-disabled-color; @btn-danger-disabled-bg; @btn-danger-disabled-border);
	&.ant-btn-loading{
		.button-color(@btn-danger-pending-color; @btn-danger-pending-bg; @btn-danger-pending-border);
	}
} 
.btn-outline-danger() {
	.button-color(@btn-outline-danger-color; @btn-outline-danger-bg; @btn-outline-danger-border);
	&:hover{
		.button-color(@btn-outline-danger-hover-color; @btn-outline-danger-hover-bg; @btn-outline-danger-hover-border);
	}
	&:focus {
		.button-color(@btn-outline-danger-focus-color; @btn-outline-danger-focus-bg; @btn-outline-danger-focus-border);
	}
	&:active,
	&.active {
		.button-color(@btn-outline-danger-active-color; @btn-outline-danger-active-bg; @btn-outline-danger-active-border);
	}
	.button-disabled(@btn-outline-danger-disabled-color; @btn-outline-danger-disabled-bg; @btn-outline-danger-disabled-border);
	&.ant-btn-loading{
		.button-color(@btn-outline-danger-pending-color; @btn-outline-danger-pending-bg; @btn-outline-danger-pending-border);
	}
} 
.btn-warning() {
	.button-color(@btn-warning-color; @btn-warning-bg; @btn-warning-border);
	&:hover{
		.button-color(@btn-warning-hover-color; @btn-warning-hover-bg; @btn-warning-hover-border);
	}
	&:focus {
		.button-color(@btn-warning-focus-color; @btn-warning-focus-bg; @btn-warning-focus-border);
	}
	&:active,
	&.active {
		.button-color(@btn-warning-active-color; @btn-warning-active-bg; @btn-warning-active-border);
	}
	.button-disabled(@btn-warning-disabled-color; @btn-warning-disabled-bg; @btn-warning-disabled-border);
	&.ant-btn-loading{
		.button-color(@btn-warning-pending-color; @btn-warning-pending-bg; @btn-warning-pending-border);
	}
} 
.btn-default() {
	.button-color(@btn-default-color; @btn-default-bg; @btn-default-border);
	&:hover{
		.button-color(@btn-default-hover-color; @btn-default-hover-bg; @btn-default-hover-border);
	}
	&:focus {
		.button-color(@btn-default-focus-color; @btn-default-focus-bg; @btn-default-focus-border);
	}
	&:active,
	&.active {
		.button-color(@btn-default-active-color; @btn-default-active-bg; @btn-default-active-border);
	}
	.button-disabled(@btn-default-disabled-color; @btn-default-disabled-bg; @btn-default-disabled-border);
	&.ant-btn-loading{
		.button-color(@btn-default-pending-color; @btn-default-pending-bg; @btn-default-pending-border);
	}
} // ghost button style
.btn-ghost() {
	.button-variant-other(@btn-ghost-color, @btn-ghost-bg, @btn-ghost-border);
} // dashed button style
.btn-dashed() {
	.button-variant-other(@btn-default-color, @btn-default-bg, @btn-default-border);
	border-style: dashed;
} // link button style
.btn-link() {
	.button-variant-other(@link-color, transparent, transparent);
	box-shadow: none;
	&:hover,
	&:focus,
	&:active {
		border-color: transparent;
	}
	.button-disabled(@disabled-color; transparent; transparent);
} // round button
.btn-round(@btnClassName: btn) {
	.button-size(@btn-circle-size; 0 @btn-circle-size / 2; @font-size-base; @btn-circle-size);
	&.@{btnClassName}-lg {
		.button-size(@btn-circle-size-lg; 0 @btn-circle-size-lg / 2; @btn-font-size-lg; @btn-circle-size-lg);
	}
	&.@{btnClassName}-sm {
		.button-size(@btn-circle-size-sm; 0 @btn-circle-size-sm / 2; @font-size-base; @btn-circle-size-sm);
	}
} // square button: the content only contains icon
.btn-square(@btnClassName: btn) {
	.square(@btn-square-size);
	.button-size(@btn-square-size; 0; @font-size-base + 2px; @btn-border-radius-base);
	&.@{btnClassName}-lg {
		.square(@btn-square-size-lg);
		.button-size(@btn-square-size-lg; 0; @btn-font-size-lg + 2px; @btn-border-radius-base);
	}
	&.@{btnClassName}-sm {
		.square(@btn-square-size-sm);
		.button-size(@btn-square-size-sm; 0; @font-size-base; @btn-border-radius-base);
	}
} // circle button: the content only contains icon
.btn-circle(@btnClassName: btn) {
	min-width: @btn-height-base;
	padding-right: 0;
	padding-left: 0;
	text-align: center;
	border-radius: 50%;
	&.@{btnClassName}-lg {
		min-width: @btn-height-lg;
		border-radius: 50%;
	}
	&.@{btnClassName}-sm {
		min-width: @btn-height-sm;
		border-radius: 50%;
	}
} // Horizontal button groups style
// --------------------------------------------------
.btn-group(@btnClassName: btn) {
	.button-group-base(@btnClassName);
	.@{btnClassName} + .@{btnClassName},
	.@{btnClassName} + &,
	span + .@{btnClassName},
	.@{btnClassName} + span,
	> span + span,
	& + .@{btnClassName},
	& + & {
		margin-left: -1px;
	}
	.@{btnClassName}-primary + .@{btnClassName}:not(.@{btnClassName}-primary):not([disabled]) {
		border-left-color: transparent;
	}
	.@{btnClassName} {
		border-radius: 0;
	}
	> .@{btnClassName}:first-child,
	> span:first-child > .@{btnClassName} {
		margin-left: 0;
	}
	> .@{btnClassName}:only-child {
		border-radius: @btn-border-radius-base;
	}
	> span:only-child > .@{btnClassName} {
		border-radius: @btn-border-radius-base;
	}
	> .@{btnClassName}:first-child:not(:last-child),
	> span:first-child:not(:last-child) > .@{btnClassName} {
		border-top-left-radius: @btn-border-radius-base;
		border-bottom-left-radius: @btn-border-radius-base;
	}
	> .@{btnClassName}:last-child:not(:first-child),
	> span:last-child:not(:first-child) > .@{btnClassName} {
		border-top-right-radius: @btn-border-radius-base;
		border-bottom-right-radius: @btn-border-radius-base;
	}
	&-sm {
		> .@{btnClassName}:only-child {
			border-radius: @btn-border-radius-sm;
		}
		> span:only-child > .@{btnClassName} {
			border-radius: @btn-border-radius-sm;
		}
		> .@{btnClassName}:first-child:not(:last-child),
		> span:first-child:not(:last-child) > .@{btnClassName} {
			border-top-left-radius: @btn-border-radius-sm;
			border-bottom-left-radius: @btn-border-radius-sm;
		}
		> .@{btnClassName}:last-child:not(:first-child),
		> span:last-child:not(:first-child) > .@{btnClassName} {
			border-top-right-radius: @btn-border-radius-sm;
			border-bottom-right-radius: @btn-border-radius-sm;
		}
	}
	& > & {
		float: left;
	}
	& > &:not(:first-child):not(:last-child) > .@{btnClassName} {
		border-radius: 0;
	}
	& > &:first-child:not(:last-child) {
		> .@{btnClassName}:last-child {
			padding-right: 8px;
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
		}
	}
	& > &:last-child:not(:first-child) > .@{btnClassName}:first-child {
		padding-left: 8px;
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;
	}
}
// Button styles
// -----------------------------
.@{btn-prefix-cls} {
	line-height: @line-height-base - 0.001;
	.btn;
	.btn-default;
	> i,
	> span {
		display: inline-block;
		transition: margin-left 0.3s @ease-in-out;
		pointer-events: none;
	}
	&-primary {
		.btn-primary;
		.@{btn-prefix-cls}-group &:not(:first-child):not(:last-child) {
			border-right-color: @btn-group-border;
			border-left-color: @btn-group-border;
			&:disabled {
				border-color: @btn-default-border;
			}
		}
		.@{btn-prefix-cls}-group &:first-child {
			&:not(:last-child) {
				border-right-color: @btn-group-border;
				&[disabled] {
					border-right-color: @btn-default-border;
				}
			}
		}
		.@{btn-prefix-cls}-group &:last-child:not(:first-child),
		.@{btn-prefix-cls}-group & + & {
			border-left-color: @btn-group-border;
			&[disabled] {
				border-left-color: @btn-default-border;
			}
		}
	}
	&-outline-primary{
		.btn-outline-primary;
	}
	&-ghost {
		.btn-ghost;
	}
	&-dashed {
		.btn-dashed;
	}
	&-success {
		.btn-success;
	}
	&-outline-success {
		.btn-outline-success;
	}
	&-danger {
		.btn-danger;
	}
	&-outline-danger {
		.btn-outline-danger;
	}
	&-warning {
		.btn-warning;
	}
	&-link {
		.btn-link;
	}
	&-icon-only {
		.btn-square(@btn-prefix-cls);
		> i {
			vertical-align: middle;
		}
	}
	&-round {
		.btn-round(@btn-prefix-cls);
		&.@{btn-prefix-cls}-icon-only {
			width: auto;
		}
	}
	&-circle,
	&-circle-outline {
		.btn-circle(@btn-prefix-cls);
	}
	// &::before {
	// 	position: absolute;
	// 	top: -1px;
	// 	right: -1px;
	// 	bottom: -1px;
	// 	left: -1px;
	// 	z-index: 1;
	// 	display: none;
	// 	background: @component-background;
	// 	border-radius: inherit;
	// 	opacity: 0.35;
	// 	transition: opacity 0.2s;
	// 	content: "";
	// 	pointer-events: none;
	// }
	.@{iconfont-css-prefix} {
		transition: margin-left 0.3s @ease-in-out;
		&.@{iconfont-css-prefix}-plus,
		&.@{iconfont-css-prefix}-minus {
			> svg {
				shape-rendering: optimizeSpeed;
			}
		}
	}
	&&-loading {
		position: relative;
		&:not([disabled]) {
			pointer-events: none;
		}
	}
	&&-loading::before {
		// display: block;
	}
	&&-loading:not(&-circle):not(&-circle-outline):not(&-icon-only) {
		padding-left: 29px;
		.@{iconfont-css-prefix}:not(:last-child) {
			margin-left: -14px;
		}
	}
	&-sm&-loading:not(&-circle):not(&-circle-outline):not(&-icon-only) {
		padding-left: 24px;
		.@{iconfont-css-prefix} {
			margin-left: -17px;
		}
	}
	&-group {
		.btn-group(@btn-prefix-cls);
	}
	&:focus > span,
	&:active > span {
		position: relative;
	}
	> .@{iconfont-css-prefix} + span,
	> span + .@{iconfont-css-prefix} {
		margin-left: 8px;
	}
	&-background-ghost {
		color: @component-background;
		background: transparent !important;
		border-color: @component-background;
	}
	&-background-ghost&-primary {
		.button-variant-ghost(@btn-primary-bg);
	}
	&-background-ghost&-danger {
		.button-variant-ghost(@btn-danger-border);
	}
	&-background-ghost&-link {
		.button-variant-ghost(@link-color; transparent);
		color: @component-background;
	}
	&-two-chinese-chars::first-letter {
		letter-spacing: 0.34em;
	}
	&-two-chinese-chars > *:not(.@{iconfont-css-prefix}) {
		margin-right: -0.34em;
		letter-spacing: 0.34em;
	}
	&-block {
		width: 100%;
	}
	&:empty {
		vertical-align: top;
	}
}
a.@{btn-prefix-cls} {
	padding-top: 0.1px;
	line-height: @btn-height-base - 2px;
	&-lg {
		line-height: @btn-height-lg - 2px;
	}
	&-sm {
		line-height: @btn-height-sm - 2px;
	}
}
